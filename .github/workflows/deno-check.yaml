name: Deno Check

on:
  push:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Pick deno version
        uses: ./.github/actions/get-asdf-tool-version
        id: deno-version
        with:
          dir_path: .
          tool_name: deno
      - name: Set up Deno
        uses: denoland/setup-deno@v1.1.2
        with:
          deno-version: "${{ steps.deno-version.outputs.version }}"

      - name: Pick nodejs version
        uses: ./.github/actions/get-asdf-tool-version
        id: nodejs-version
        with:
          dir_path: .
          tool_name: nodejs
      - name: Set up Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: "${{ steps.nodejs-version.outputs.version }}"
          registry-url: "https://registry.npmjs.org"

      - name: Check generated
        run: deno task run-for-test && test -z "$(git status -s)"

      - name: Check
        run: deno task check

      - name: Build:npm
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: deno task build:npm

      # for publish
      - name: Get tag version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_tag
        run: echo TAG_VERSION="${GITHUB_REF/refs\/tags\//}" >> "$GITHUB_OUTPUT"

      - name: Build:npm
        if: startsWith(github.ref, 'refs/tags/')
        run: deno task build:npm ${{ steps.get_tag.outputs.TAG_VERSION }}
      - name: npm publish
        if: startsWith(github.ref, 'refs/tags/')
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN_FOR_PUBLISH }}
        run: cd npm && npm publish
